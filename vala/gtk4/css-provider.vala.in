const string appID = "io.github.Miqueas.GTK-Examples.Vala.Gtk4.CssProvider";
const string appTitle = "GtkCssProvider";
const string appSubtitle = "App subtitle";

int main(string[] args) {
  var app = new Gtk.Application(appID, ApplicationFlags.DEFAULT_FLAGS);
  app.startup.connect(onAppStartup);
  app.activate.connect(onAppActivate);
  return app.run(args);
}

void onAppActivate(Application self) {
  var window = (self as Gtk.Application)?.get_active_window();
  window?.present();
}

void onAppStartup(Application self) {
  var window = new Gtk.ApplicationWindow(self as Gtk.Application);
  window.title = appTitle;
  window.default_width = 400;
  window.default_height = 400;

  var provider = new Gtk.CssProvider();
  provider.load_from_path("@cssPath@");

  var display = window.get_display();
  Gtk.StyleContext.add_provider_for_display(
    // `Gdk.Display.get_default()` also works
    display,
    provider,
    Gtk.STYLE_PROVIDER_PRIORITY_APPLICATION
  );

  var label = new Gtk.Label("Hi there!");
  var button = new Gtk.Button.with_label("Toggle label style");
  button.clicked.connect(() => {
    if (label.has_css_class("color-red")) {
      label.remove_css_class("color-red");
    } else {
      label.add_css_class("color-red");
    }
  });

  var box = new Gtk.Box(Gtk.Orientation.VERTICAL, 10);
  box.halign = Gtk.Align.CENTER;
  box.valign = Gtk.Align.CENTER;
  box.append(label);
  box.append(button);

  window.child = box;
}